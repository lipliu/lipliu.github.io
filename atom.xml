<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>lipliu.blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-07-31T04:22:57.492Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>lipliu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>app测试简单总结</title>
    <link href="http://yoursite.com/2020/07/31/app%E6%B5%8B%E8%AF%95%E7%AE%80%E5%8D%95%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2020/07/31/app%E6%B5%8B%E8%AF%95%E7%AE%80%E5%8D%95%E6%80%BB%E7%BB%93/</id>
    <published>2020-07-31T04:21:10.000Z</published>
    <updated>2020-07-31T04:22:57.492Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Jul 31 2020 12:23:35 GMT+0800 (GMT+08:00) --><p><strong>1、安全测试（权限）</strong></p><p>1）软件权限：其中包括发送信息，拨打电话，链接网络，访问手机信息，联系人信息等等</p><p>2）数据在本地的存储、传输等</p><p>3）执行某些操作时导致的输入有效性验证、授权、数据加密等方面</p><p>4）基于各种通信协议或者行业标准来检查</p><p><strong>2、安装运行卸载测试</strong></p><p>1）验证app能否正确安装运行卸载，以及操作过程和操作前后对系统资源的占有情况</p><p>2）安装运行卸载的提示，报告等</p><p>3）检查安装路径，文件是否合理，组件是否正确注册等</p><p><strong>3、UI测试</strong></p><p>1）用户界面（菜单、对话框、窗口）等布局，风格是否满足用户需求，文字位置，描述是否正确，界面美观程度，文字图片组合是否合理</p><p>2）用户友好性、人性化、便于操作等</p><p><strong>4、功能测试</strong></p><p>1）评审需求，多方面考虑，整理出内在外在以及非功能性的直接间接功能点，对比需求，提取测试点</p><p>2）根据常用的一些分析方法，等价类边界值判定表因果图场景法等方法，设计测试用例，对提取的功能点进行覆盖</p><p>3）测试各个阶段不断跟踪缺陷，做好用例的更新迭代和不断变更需求所带来的业务或者需求的错误</p><p><strong>5、性能测试</strong></p><p>1）极限测试：各种边界情况下验证app的响应能力</p><p>如：低电量、储存满。弱网等情况</p><p>2）响应能力测试：验证各种情况下不同操作能否满足用户响应需求</p><p>3）压力测试：反复长期操作下，系统该资源的使用情况</p><p><strong>6、中断测试（干扰）</strong></p><p>比如：前后台运行时来电话，短信，下载文件，听音乐看电影等不同情况下的表现</p><p><strong>7、兼容测试</strong></p><p>1）不同网络环境（WiFi、2G、3G、4G等）</p><p>2）各种设备品牌机型系统版本等兼容</p><p>苹果、安卓（不同品牌，不同安卓系统版本）等</p><p><strong>8、回归测试</strong></p><p>bug修复后的回归测试，上线交付前进行全部的回归，验证</p><p><strong>9、升级更新测试</strong></p><p>每次app版本迭代更新时，配合不同网络环境，及不同更新权限（强制更新，不强制更新），进行下载、安装、更新、启动运行等测试</p><p><strong>10、支付测试</strong></p><p>1）支付结果的确认，数据库查询</p><p>2）请求报文是否加密</p><p>3）不同场景的支付</p><p>金额足够、金额不足、重复支付、无网支付、弱网支付、同账号多平台一起支付、余额宝微信信用卡等多种支付方式、不同支付方式的组合、密码正确/错误、支付上限等情况</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Fri Jul 31 2020 12:23:35 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;&lt;strong&gt;1、安全测试（权限）&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;1）软件权限：其中包括发送信息，拨打电话，链接网络，访问手机信息，联系人信息
      
    
    </summary>
    
    
      <category term="Web" scheme="http://yoursite.com/categories/Web/"/>
    
    
      <category term="learn" scheme="http://yoursite.com/tags/learn/"/>
    
  </entry>
  
  <entry>
    <title>http3</title>
    <link href="http://yoursite.com/2020/07/31/http%E5%8D%8F%E8%AE%AE%EF%BC%88%E4%B8%89%EF%BC%89/"/>
    <id>http://yoursite.com/2020/07/31/http%E5%8D%8F%E8%AE%AE%EF%BC%88%E4%B8%89%EF%BC%89/</id>
    <published>2020-07-31T02:33:12.000Z</published>
    <updated>2020-07-31T04:25:36.061Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Jul 31 2020 12:25:49 GMT+0800 (GMT+08:00) --><p>说说http协议的一些特点：</p><p><strong>1）无状态</strong></p><p>http协议是一种自身不对请求和响应之间的通信状态进行保存的协议，即无状态协议。</p><p>这种设置的好处是：更快的处理更多的请求事务，确保协议的可伸缩性</p><p>不过随着web的不断发展，有时候，需要将这种状态进行保持，随即，就引入了cookie技术，cookie技术通过在请求和响应报文中写入cookie信息来控制客户端的状态。</p><p>有关cookie的内容后面我们再说。。。</p><p><strong>2）持久性</strong></p><p>正常在发送http时，都需要建立TCP的连接，再发送报文。</p><p><img src="983980-20160630175843687-83562174.png" alt="img"></p><p>如果每次想要发送http报文都需要经过这个过程，那么时间大部分都会消耗在建立和断开连接的过程中。</p><p>因此http中使用了connection属性，用于指定连接的方式。</p><p>当设置成keep-alive，http就会建立一条持久化的连接，不需要每次都建立连接，再中断。</p><p>这样做的好处是：减轻了服务器端的负载，减少开销的那部分时间，使http请求和响应都能更快的结束，相应的，web页面显示速度也就相对提升了。</p><p><strong>3）管线化</strong></p><p>如果一个http请求，请求了大量的图片等大文件，那么其他的http请求怎么办呢？</p><p>现在，管线化技术的出现，使得http请求比持久性连接更要快；特点在于：请求数越多，时间差越明显。</p><p><strong>4）内容编码</strong></p><p>由于某些报文的内容过大，因此在传输时，为了减少传输的时间，会采取一些压缩的措施。</p><p>例如上面的报文信息中，Accept-Encoding就定义了内容编码的格式：gzip</p><p>有下面几种方式：</p><p>gzip：GNU压缩格式</p><p>compress：UNIX系统的标准压缩格式</p><p>deflate：是一种同时使用了LZ77和哈弗曼编码的无损压缩格式</p><p>identity：不进行压缩</p><p><strong>5）多部分对象集合</strong></p><p>有的时候传输的内容，不仅仅是一些字符串，还有可能是一些图片，字符，音乐二进制等混杂的内容。</p><p>这就需要使用多部分对象集合，multipart，例如在使用java编写web上传文件的代码时，需要在form中指定form的编码格式。</p><p>设置form的enctype属性的值为multipart/form-data。</p><p>这是因为默认的情况下form使用的编码格式是：applicatin/x-www-form-urlencoded，这种编码格式会把所有的内容进行编码，不适合上传文件这种情况。</p><p>这两种编码格式的区别主要是：</p><p>multipart/form-data 会以控件为基准，编码form中的内容。</p><p>application/x-www-form-urlencoded 会把form中的内容编码成键值对的形式。</p><p><strong>6）范围请求</strong></p><p>有些场景下，http报文请求一些很大的图片，但是加载过程很慢。</p><p>比如我们登录一些大图片的网址，会发现有时候图片是一块一块加载的。</p><p>这就是因为设置了http请求的长度，这样就可以分块的加载资源文件。</p><p>在请求报文中使用Range属性，在响应报文中使用Content-Type属性都可以指定一定字节范围的http请求。</p><p>接下来，说说几种http协议的数据传输方式</p><p>http协议的传输方式有很多种，处于安全考虑，常用的一般都是GET和POST两种，先来介绍下这两种</p><p>1）GET：获取资源</p><p>GET方法用来请求访问已被URL识别的资源</p><p>2）POST：传输实体主体</p><p>POST方法用来请求服务器传输信息实体的主体</p><p><strong>GET和POST的区别：</strong></p><p>首先，使用目标不同：GET方法只是用来查询，不会对浏览器上的信息产生影响，每次GET的方法都是相同的</p><p>其次，大小不同：GET是放在URL首部，因此大小随着浏览器而定，而POST则是在报文中，只要没有具体限制，文件的大小是没限制的</p><p>然后，安全性不同：GET采用的是明文传输，而POST是放在报文内部，无法看到</p><p>从使用场景的角度来说，一般像用户注册登录这种信息都是私密的，采用POST，而针对查询等，为了快速，大多采用GET传输。</p><p>（关于关于GET和POST的区别，最近重新看了很多别人写的博客啊资料什么的，发现上面的解释比较模糊，我就在下面的评论区里面将区别清晰的描述一下，当然，后面的博客也会详细的解释）</p><p>接下来介绍其他几种数据传输方式：</p><p>3）PUT：传输文件</p><p>PUT要求在请求报文的主体中包含文件内容，然后保存到请求URL指定的位置</p><p>处于安全考虑，一般web网站不使用此方法，若配合web的安全验证机制，或者架构采用REST标准的网站，就可能开放使用此方法</p><p>4）HEAD：获得报文首部</p><p>HEAD和GET方法一样，只不过不返回报文主体部分，用于确认URI的有效性及资源更新的日期时间等</p><p>5）DELETE：删除文件</p><p>DELETE是与PUT相反的方法，是按请求URI删除指定的资源</p><p>处于安全考虑，一般web网站不使用此方法，若配合web的安全验证机制，或者架构采用REST标准的网站，就可能开放使用此方法</p><p>6）OPTIONS：询问支持的方法</p><p>用来查询针对请求URI指定的资源支持的方法</p><p>7）TRACE：追踪路径</p><p>是让web服务器端将之前的请求通信还回给客户端的方法</p><p>发送请求时，在Max-Frowards首部字段中填入数值，每经过一个服务器端就-1，当数值为0时，停止传输，最后收到服务器返回状态码200 OK的响应</p><p>但是，这种方法基本很少使用，而且很容易引起XST（跨站追踪）攻击，就更不会用到了。</p><p>8）CONNECT：要求采用隧道协议连接代理</p><p>该方法要求在于代理服务器通信时建立隧道，实现用隧道协议进行TCP通信，主要使用SSL（安全套接层）和TLS（传输层安全）协议把通信内容加密后经过网络传输。</p><p>最后，附上一张http1.1和http1.0版本各自支持的方法，另外，注意用大写。。。。。。</p><p><img src="983980-20160630184847546-795504173.png" alt="img"></p><p>其中，LINK和UNLINK已被HTTP1.1废弃</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Fri Jul 31 2020 12:25:49 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;说说http协议的一些特点：&lt;/p&gt;&lt;p&gt;&lt;strong&gt;1）无状态&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;http协议是一种自身不对请求和响应之间的通
      
    
    </summary>
    
    
      <category term="Web" scheme="http://yoursite.com/categories/Web/"/>
    
    
      <category term="learn" scheme="http://yoursite.com/tags/learn/"/>
    
  </entry>
  
  <entry>
    <title>web测试2</title>
    <link href="http://yoursite.com/2020/07/30/web%E6%B5%8B%E8%AF%952/"/>
    <id>http://yoursite.com/2020/07/30/web%E6%B5%8B%E8%AF%952/</id>
    <published>2020-07-30T10:29:19.000Z</published>
    <updated>2020-07-31T02:29:06.841Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Jul 31 2020 12:23:35 GMT+0800 (GMT+08:00) --><p><strong>一、输入框测试</strong></p><p>在web测试中，我们经常遇到这种输入框的测试，输入框测试看似简单，实际上包含了很多的测试基本的方法，思考逻辑，下面就是我总结出来的一些注意点：</p><p>​ 1）验证输入输出信息的一致性</p><p>​ 2）输入框前面的文字提示是否正确</p><p>​ 3）对特殊字符的处理、识别：单双引号，括号，逗号、分号等等，以及大小写状态，半角全角状态下的情况</p><p>​ 4）输入框的大小、长度、边框等</p><p>​ 5）不同字符的输入，以及字符组合情况的处理（数字+字母+字符等）</p><p>​ 6）对空格、tab换行键的处理机制</p><p>​ 7）密码输入框字符星号或者其他星号的转行，加密</p><p>​ 8）输入框输入字符长度是否有限制</p><p>​ 9）字符本身显示的颜色，规格等</p><p>​ 10）有些输入框需要加以限制，如输错，是否有提示？提示是否简单合理？</p><p>​ 11）输入状态，某种情况下输入框出于不可编辑，当再次处于编辑状态，输入框的输入状态是否有变化？</p><p>​ 12）输入类型：是否允许复制黏贴剪切等输入操作</p><p>​ 13）关键字是否支持通配符，以及关键字的搜索能力，敏感字等情况</p><p>​ 14）输入框输入空格的情况</p><p>​ 15）比如登陆注册，各项输入条件的判定：是否输入，输入是否正确等</p><p><strong>二、用户权限测试</strong></p><p>​ 用户权限，顾名思义，就是该账号拥有哪些执行操作的权利</p><p>​ 1）给某账号赋予权限后，登陆该账号，查看是否拥有已赋予的权限，以及权限设置是否正确（权限是否超过或者不足）</p><p>​ 2）删除或修改已经登陆并且正在执行操作的账号权限，程序能否正确处理，验证</p><p>​ 3）重新注册系统变更登陆身份后再登陆，程序能否正确执行，之前所拥有的权限能否继续使用</p><p>​ 4）在用工作分配或者角色管理情况下，删除包含用户的工作组或者角色，程序能否正确处理</p><p>​ 5）不同权限账号登陆同一个系统，权限范围是否正确</p><p>​ 6）能否给信息为空、长用户名的账号添加权限</p><p>​ 7）是否允许删除系统管理员或者修改管理员权限？删除或者修改后的实际情况</p><p>​ 8）已登录的用户能否修改或者删除自己或者他人的权限，信息</p><p>​ 9）添加用户（有编号或者标识），不同用户名标识的组合情况下，权限能否处理正确</p><p>​ 10）修改用户权限或者信息后，对其他模块是否有影响</p><p>​ 11）如果修改用户信息为和已存在的其他用户信息相同，能否修改成功？是否有对应提示？</p><p>​ 12）修改某些设置，是否会对与该账号权限相同或者高于/低于该账号的其他账号的权限造成影响</p><p>​ 13）同一用户是否可以同时属于其他组，各个组的权限能否交叉？</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Fri Jul 31 2020 12:23:35 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;&lt;strong&gt;一、输入框测试&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;在web测试中，我们经常遇到这种输入框的测试，输入框测试看似简单，实际上包含了很多
      
    
    </summary>
    
    
      <category term="Web" scheme="http://yoursite.com/categories/Web/"/>
    
    
      <category term="learn" scheme="http://yoursite.com/tags/learn/"/>
    
  </entry>
  
  <entry>
    <title>web测试</title>
    <link href="http://yoursite.com/2020/07/30/web%E6%B5%8B%E8%AF%95/"/>
    <id>http://yoursite.com/2020/07/30/web%E6%B5%8B%E8%AF%95/</id>
    <published>2020-07-30T02:30:35.000Z</published>
    <updated>2020-07-30T03:47:16.214Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Jul 31 2020 12:23:35 GMT+0800 (GMT+08:00) --><p><strong>一、功能测试</strong></p><p>​ <strong>1.1链接测试</strong></p><p>​ 链接是web应用系统的一个很重要的特征，主要是用于页面之间切换跳转，指导用户去一些不知道地址的页面的主要手段，链接测试一般关注三点：</p><p>​ 1）链接是否按照既定指示那样，确实链接到了该链接的界面</p><p>​ 2）测试该链接所链接的页面是否真的存在</p><p>​ 3）保证系统中没有单独存在的页面（即没有链接指向，只能通过正确的URL地址才能访问）</p><p>​ PS：这里顺带说点关于协议的一些小知识，URL全称“统一资源定位符”，表示获取某一互联网资源的地址；而URI表示“统一资源标识符”，代表互联网上某一些资源</p><p>​ <strong>1.2表单测试</strong></p><p>​ 这个也可以理解为数据落地；当用户在web应用系统上向服务器提交信息时，就需要使用表单操作，比如，用户注册，登录，信息变更等等；这种情况下，我们必须测试提交信息的完整性，</p><p>​ 以检验提交给服务器的数据的正确性，当然，这涉及到一些常理性逻辑，比如：出生日期和职业，工作年限是否恰当，所在地省份城市区域间的匹配等，如果设定使用默认值，也需要测试。</p><p>​ <strong>1.3导航测试</strong></p><p>​ 作为测试，很多时候都要站在用户的角度去思考，那么，作为一个用户，当他访问一个web的网站或者系统时，会怎么去操作呢？</p><p>​ 大部分用户都是目的驱动的，当他访问一个网站，会很快的浏览系统，找不到满足自己需求的信息时，会很快离开，很少有用户愿意花时间去熟悉系统的结构，因此，导航测试就显得很重要。</p><p>​ 导航测试，就是在不同的页面跳转之间，或者按钮、对话框、列表以及窗口等，通过考虑这些因素去判断一个应用是否易于导航：是否直观？系统的主要模块是否可以通过主页访问或者到达？</p><p>​ 站点是否需要站内地图或者搜索引擎等其他帮助？</p><p>​ web系统导航的另外一个重点就是页面结构、导航、菜单、风格等是否一致，确保用户可以凭借直觉或者简单的判断就可以找到自己想要的内容。</p><p>​ <strong>1.4图形测试</strong></p><p>​ 也可以理解为UI测试，其中包括图片、动画、边框、颜色、字体、背景、按钮等等。</p><p>​ 其中要考虑的几个重点，我做了一个大概的总结：</p><p>​ 1）图片要有明确的用途，代表；图片尺寸尽量小，一般采用JPG或者GIF压缩</p><p>​ 2）页面整体风格是否和系统的用途一致</p><p>​ 3）背景颜色，字体，搭配是否合理</p><p>​ <strong>1.5内容测试</strong></p><p>​ 这个主要用来检测web系统提供信息的准确性、相关性</p><p>​ 比如：商品的价格，文字描述；信息的准确性，是否有拼写错误；信息的相关性，比如很多网站的“相关文章列表，视频列表等”</p><p>​ <strong>1.6整体界面测试</strong></p><p>​ 这个也就是我们常说的用户体验。用户浏览时是否感觉舒适，整体风格等等</p><p>​ 这个我建议一般做一个类似问卷调查的形式，来判定用户的反馈信息，最好有最终用户的参与</p><p><strong>二、兼容性测试</strong></p><p>​ <strong>2.1平台兼容</strong></p><p>​ 现在有很多的操作系统，比如Windows、Unix、Linux、macintosh等；用户使用哪个系统取决于用户，因此，系统兼容测试就很有必要了。</p><p>​ <strong>2.2浏览器兼容</strong></p><p>​ 浏览器是web客户端最核心的组件，不同的浏览器，对Java，JavaScript，css或者HTML的规格都有不同的支持；</p><p>​ 另外，采用的框架和结构风格在不同浏览器中也存在不同的显示甚至不显示，不同的浏览器对安全性的设置也是不同的。</p><p>​ 测试浏览器兼容，有个方法就是创建一个兼容性矩阵，来测试不同厂商不同版本的浏览器兼容。</p><p>​ 比如测试IE浏览器，可以通过一个叫做IEtester的工具来测试兼容，或者可以通过F12控制台来切换浏览器版本来测试兼容以前一些前端元素的显示等</p><p>​ 鉴于国内市场浏览器很多，比如360、搜狗，搜狐、QQ浏览器等，这些本土的浏览器基本都采用的IE浏览器内核的双核配置</p><p><strong>三、安全测试</strong></p><p>​ 我对安全测试了解不多，通过查资料，发现基本的一些安全知识还是互通的，这个就提一下吧</p><p>​ 安全测试的主要区域有以下几点：</p><p>​ 1）现在很多web应用系统都采用先注册后登录的方式，因此，测试用户名和密码的有效无效性，注意大小写敏感，次数限制，是否可以不登录而浏览某些页面等</p><p>​ 2）是否有超时限制</p><p>​ 3）测试用户操作时相关信息是否写入了日志文件、是否可追踪等</p><p>​ 4）如果使用了安全套字，需要测试加密是否正确，加密前后的信息完整性，正确性</p><p>​ 5）没有经过授权，是否可以在服务器端或者前端放置和编辑脚本的问题</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Fri Jul 31 2020 12:23:35 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;&lt;strong&gt;一、功能测试&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;​ &lt;strong&gt;1.1链接测试&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;​ 链接是web应
      
    
    </summary>
    
    
      <category term="Web" scheme="http://yoursite.com/categories/Web/"/>
    
    
      <category term="learn" scheme="http://yoursite.com/tags/learn/"/>
    
  </entry>
  
  <entry>
    <title>http协议（二）请求和响应报文的构成</title>
    <link href="http://yoursite.com/2020/02/18/http2/"/>
    <id>http://yoursite.com/2020/02/18/http2/</id>
    <published>2020-02-18T11:36:41.000Z</published>
    <updated>2020-02-18T11:38:08.659Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Jul 31 2020 12:23:35 GMT+0800 (GMT+08:00) --><p>http协议用于客户端和服务器之间的通信，请求访问资源的一方称为客户端，而提供资源响应的一方称为服务器端。</p><p>下面就是客户端和服务端之间简单的通信过程</p><p><img src="983980-20160630160129390-202840269.png" alt="img"></p><p>PS：请求必须从客户端建立通信，服务端没收到请求之前不会发送响应</p><p>下面先来说说请求的构成：</p><p><strong>1）请求方法URI协议/版本</strong></p><p><strong>2）请求头(Request Header)</strong></p><p><strong>3）请求正文</strong></p><p>下面是一个请求的例子：</p><p>GET/sample.jspHTTP/1.1</p><p>Accept:image/gif.image/jpeg,<em>/</em></p><p>Accept-Language:zh-cn</p><p>Connection:Keep-Alive</p><p>Host:localhost</p><p>User-Agent:Mozila/4.0(compatible;MSIE5.01;Window NT5.0)</p><p>Accept-Encoding:gzip,deflate</p><p>username=jinqiao&amp;password=1234</p><p><strong>1）请求方法URI协议/版本</strong></p><p>以上请求中“GET”代表请求方法，“/sample.jsp”表示URI，“HTTP/1.1代表协议和协议的版本。</p><p>根据HTTP标准，HTTP请求可以使用多种请求方法。具体的方法以及区别后面我们介绍。</p><p><strong>2）请求头</strong></p><p>Accept 可接受的内容类型</p><p>Accept-Language 语言</p><p>Connection连接状态</p><p>Host 请求的域名（这里我设置的是请求本地，当然，关于域名，就是所谓的URL）</p><p>User-Agent 浏览器端浏览器型号和版本</p><p>Accept-Encoding 可接受的压缩类型 gzip,deflate</p><p><strong>3）请求正文</strong></p><p>请求头和请求正文之间是一个空行，它表示请求头已经结束，接下来的是请求正文。请求正文中可以包含客户提交的查询字符串信息：</p><p>username=jinqiao&amp;password=1234</p><p>在以上的例子中，请求的正文只有一行内容。当然，在实际应用中，HTTP请求正文可以包含更多的内容。</p><p><strong>响应的构成</strong></p><p>HTTP响应与HTTP请求相似，HTTP响应也由3个部分构成：</p><p><strong>1）状态行</strong></p><p>*<em>2）响应头<br>*</em></p><p><strong>3）响应正文</strong></p><p>在接收和解释请求消息后，服务器会返回一个HTTP响应消息。</p><p>状态行由协议版本、数字形式的状态代码、及相应的状态描述，各元素之间以空格分隔。</p><p>格式: HTTP-Version Status-Code Reason-Phrase CRLF</p><p>例如: HTTP/1.1 200 OK</p><p><strong>状态代码：</strong></p><p>状态代码由3位数字组成，表示请求是否被理解或被满足。</p><p>状态描述：</p><p>状态描述给出了关于状态代码的简短的文字描述。</p><p>状态代码的第一个数字定义了响应的类别，后面两位没有具体的分类。</p><p>第一个数字有五种可能的取值：</p><p>- 1xx: 指示信息—表示请求已接收，继续处理。</p><p>- 2xx: 成功—表示请求已经被成功接收、理解、接受。</p><p>- 3xx: 重定向—要完成请求必须进行更进一步的操作。</p><p>- 4xx: 客户端错误—请求有语法错误或请求无法实现。</p><p>- 5xx: 服务器端错误—服务器未能实现合法的请求。</p><p>状态代码 状态描述 说明</p><p>200 OK 客户端请求成功</p><p>400 Bad Request 由于客户端请求有语法错误，不能被服务器所理解。</p><p>401 Unauthonzed 请求未经授权。这个状态代码必须和WWW-Authenticate报头域一起使用</p><p>403 Forbidden 服务器收到请求，但是拒绝提供服务。服务器通常会在响应正文中给出不提供服务的原因</p><p>404 Not Found 请求的资源不存在，例如，输入了错误的URL。</p><p>500 Internal Server Error 服务器发生不可预期的错误，导致无法完成客户端的请求。</p><p>503 Service Unavailable 服务器当前不能够处理客户端的请求，在一段时间之后，服务器可能会恢复正常。</p><p><strong>响应头</strong></p><p>响应头可能包括：</p><p>Location：响应报头域用于重定向接受者到一个新的位置。</p><p>Server：响应报头域包含了服务器用来处理请求的软件信息。它和User-Agent请求报头域是相对应的，前者发送服务器端软件的信息，后者发送客户 端软件(浏览器)和操作系统的信息。</p><p>Content-Encoding：实体报头域被使用作媒体类型的修饰符，它的值指示了已经被应用到实体正文的附加内容编码，因而要获得Content- Type报头域中所引用的媒体类型，必须采用相应的解码机制。</p><p>Content-Language：实体报头域描述了资源所用的自然语言。Content-Language允许用户遵照自身的首选语言来识别和区分实体。</p><p>Content-Length：实体报头域用于指明正文的长度，以字节方式存储的十进制数字来表示，也就是一个数字字符占一个字节，用其对应的ASCII码存储传输。</p><p>要注意的是：这个长度仅仅是表示实体正文的长度，没有包括实体报头的长度。</p><p>Content-Type：实体报头域用语指明发送给接收者的实体正文的媒体类型。</p><p>Last-Modified：实体报头域用于指示资源最后的修改日期及时间。</p><p>Expires：实体报头域给出响应过期的日期和时间。</p><p>Expires实体报头域使用的日期和时间必须是RFC 1123中的日期格式，例如：</p><p>Expires: Thu, 15 Sep 2005 16:00:00 GMT</p><p>下面是一个HTTP响应的例子：</p><p>HTTP/1.1 200 OK</p><p>Server:Apache Tomcat/5.0.12</p><p>Date:Mon,6Oct2003 13:23:42 GMT</p><p>Content-Length:112</p><p>从上面的例子大家可以对照着进行比对，或者自己可以尝试在电脑上操作，这里给大家教一个方法：</p><p>使用chrome浏览器自带的开发者工具查看http头的方法</p><p>1.在网页任意地方右击选择审查元素或者按下 shift+ctrl+c或者F12, 打开chrome自带的调试工具;</p><p>2.选择network标签, 刷新网页(在打开调试工具的情况下刷新);</p><p>3.刷新后在左边找到该网页url,点击 后右边选择headers,就可以看到当前网页的http请求和响应</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Fri Jul 31 2020 12:23:35 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;http协议用于客户端和服务器之间的通信，请求访问资源的一方称为客户端，而提供资源响应的一方称为服务器端。&lt;/p&gt;&lt;p&gt;下面就是客户端和服务端之
      
    
    </summary>
    
    
      <category term="Web" scheme="http://yoursite.com/categories/Web/"/>
    
    
      <category term="learn" scheme="http://yoursite.com/tags/learn/"/>
    
  </entry>
  
  <entry>
    <title>http1</title>
    <link href="http://yoursite.com/2020/02/18/http1/"/>
    <id>http://yoursite.com/2020/02/18/http1/</id>
    <published>2020-02-18T10:43:50.000Z</published>
    <updated>2020-02-18T10:47:18.990Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Jul 31 2020 12:23:35 GMT+0800 (GMT+08:00) --><p>当我们在浏览器的地址栏中输入网址，然后点击回车，接着，浏览器就会呈现出我们需要的web界面，那么，这个界面是怎么产生的？</p><p>web的界面是根据我们输入的URL（网址、地址），浏览器从服务器端获取对应的文件资源等信息，然后显示在浏览器上面。</p><p>像这种通过发送请求获取服务器资源的web浏览器等，都可以称之为客户端（client）</p><p>web使用http（超文本传输协议）协议作为规范，来完成从客户端到服务端等一系列的运作流程，而协议指的就是规则的约定，可以说，web是建立在http协议上进行通信的</p><p>关于http的产生和发展，这里就不赘述了，有兴趣的童鞋可以百度。。。。。。</p><p>为了理解http，有必要简单介绍下<strong>tcp/ip协议族</strong></p><p>计算机与网络设备之间互相通信，双方就必须基于同样的方法。比如：如何发现通信目标、由谁发起通信、使用什么语言通信、怎么结束通信都需要事先确定，所有这些都需要一种规则，</p><p>这就是协议。协议中存在多种的内容；从电缆的规格到ip地址的选定方法，寻找异地用户的方法，建立通信的顺序，以及web页面显示需要处理的步骤等等</p><p>像这样<strong>把与互联网相关联的协议集合起来统称为tcp/ip</strong>。</p><p><strong>tcp/ip的分层</strong></p><p>tcp/ip很重要的一个特点就是分层。按照层次分为以下四层：<strong>应用层，传输层，网络层和数据链路层</strong></p><p>分层的好处：如果互联网只由一个协议统筹，那么某一地方出问题，整体都会出现问题，无法使用；分层后，只需替换出现问题的或者需要修改的即可，而且分层后针对具体的设计也变得更为简单</p><p><strong>应用层</strong>：体系的最高层，应用进程间通信交互的规则</p><p>tcp/ip协议族预存了各类通用的应用服务，比如：</p><p>ftp：文件传输协议</p><p>dns：域名系统协议</p><p>http：万维网应用协议</p><p>smtp：电子邮件协议</p><p>以上几种是常用的几种，还有很多其他的协议，感兴趣的可以找找其他专业的书籍看看</p><p><strong>传输层</strong>：提供处于网络连接中的两台计算机间的数据传输，其中包括tcp和udp两种性质不同的协议</p><p>tcp：传输控制协议，传输的单位为报文段，提供面向连接的，可靠的数据传输服务</p><p>udp：传输单位为用户数据报，它是尽最大努力的提供数据传输服务，不保证可靠性</p><p><strong>网络层</strong>：又名网络连接层</p><p>用来处理在网络上流动的数据包（封装）。数据包是网络传输的最小数据单位。该层规定了通过怎样的路径到达对方计算机并把数据包传给对方</p><p><strong>链路层</strong>：又名数据链路层，网络接口层</p><p>处理连接网络的硬件部分。比如控制操作系统、硬件的驱动、网络适配器、光钎等</p><p><strong>数据的封装</strong>：</p><p>用户端发送一个请求，从应用层开始，一直到链路层，每一层都会被打上该层所属的首部信息；反之，接收端在层与层之间传输时，每经过一层会去掉该层的首部信息，这种做法叫做封装</p><p><strong>与http密切相关的协议</strong></p><p>IP协议：位于网络层，作用是把各种数据包传送给对方，而要准确的把数据传送给对方，就需要满足各类条件，其中有2个很重要的条件：ip地址和mac地址</p><p>ip地址相信有点基础的人都知道，就是节点被分配到的地址，mac地址则是指网卡所属的固定地址，ip和mac地址可以进行配对</p><p>ip间的通信依赖于mac地址，在信息传输中，有时候由于中转太多，因此会采用ARP协议，这是个用来解析地址的协议，通过ip地址就可以反查出对应的mac地址</p><p>tcp协议：位于传输层，确保传输的可靠性</p><p>数据传输中为了传输方便，会将大块数据分割成报文段，而tcp协议能确认数据最终是否传送给对方</p><p>为了准确传输，传输中采用了三次握手策略（这种手段可以理解为多次确认，来确保数据传输的可靠性）</p><p>dns协议：负责域名解析，位于应用层，提供域名到ip地址间的解析</p><p>通过域名查找ip地址，或者逆向从ip地址反查域名</p><p><strong>URL和URI</strong></p><p>URL：统一资源定位符：表示资源的地点，具体指向（门牌号）</p><p>URI：统一资源标识符：用字符串标识某些互联网资源（该门牌号的地方具体有什么资源）</p><p>URL是URI的子集</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Fri Jul 31 2020 12:23:35 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;当我们在浏览器的地址栏中输入网址，然后点击回车，接着，浏览器就会呈现出我们需要的web界面，那么，这个界面是怎么产生的？&lt;/p&gt;&lt;p&gt;web的界
      
    
    </summary>
    
    
      <category term="Web" scheme="http://yoursite.com/categories/Web/"/>
    
    
      <category term="learn" scheme="http://yoursite.com/tags/learn/"/>
    
  </entry>
  
  <entry>
    <title>Markdown学习</title>
    <link href="http://yoursite.com/2020/02/18/markdown-0/"/>
    <id>http://yoursite.com/2020/02/18/markdown-0/</id>
    <published>2020-02-18T04:56:57.000Z</published>
    <updated>2020-02-18T10:47:36.598Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Jul 31 2020 12:23:35 GMT+0800 (GMT+08:00) --><p>​ <strong>查看源代码快捷键:Ctrl+/</strong></p><h2 id="1、标题"><a href="#1、标题" class="headerlink" title="1、标题"></a>1、标题</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//标题一共有6个级别，书写方式如下：</span><br><span class="line"><span class="section"># 一级标题</span></span><br><span class="line"><span class="section">## 二级标题</span></span><br><span class="line"><span class="section">### 三级标题</span></span><br><span class="line"><span class="section">#### 四级标题</span></span><br><span class="line"><span class="section">##### 五级标题</span></span><br><span class="line"><span class="section">###### 六级标题</span></span><br></pre></td></tr></table></figure><p>Copy</p><p><strong>具体效果如下：</strong></p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><hr><h2 id="2、字体"><a href="#2、字体" class="headerlink" title="2、字体"></a>2、字体</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//粗体</span></span><br><span class="line">**你好呀，叶先森**</span><br><span class="line"></span><br><span class="line"><span class="comment">//斜体</span></span><br><span class="line">*我喜欢你*</span><br><span class="line"></span><br><span class="line"><span class="comment">//删除线</span></span><br><span class="line">~~此内容为废弃内容~~</span><br></pre></td></tr></table></figure><p>Copy</p><p><strong>具体效果如下：</strong></p><p><strong>你好呀，叶先森</strong> <em>我喜欢你</em></p><p><del>此内容为废弃内容</del></p><hr><h2 id="3、引用"><a href="#3、引用" class="headerlink" title="3、引用"></a>3、引用</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引用书写语法如下：</span></span><br><span class="line"></span><br><span class="line">&gt;此教程来自小小叶儿出品，版权所有，违版必究</span><br><span class="line">&gt;&gt;此教程来自小小叶儿出品，版权所有，违版必究</span><br><span class="line">&gt;&gt;&gt;此教程来自小小叶儿出品，版权所有，违版必究</span><br></pre></td></tr></table></figure><p>Copy</p><blockquote><p>此教程来自小小叶儿出品，版权所有，违版必究</p><blockquote><p>此教程来自小小叶儿出品，版权所有，违版必究</p><blockquote><p>此教程来自小小叶儿出品，版权所有，违版必究</p></blockquote></blockquote></blockquote><h2 id="4、分割线"><a href="#4、分割线" class="headerlink" title="4、分割线"></a>4、分割线</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分隔线（长度：根据内容而定）</span></span><br><span class="line">---</span><br><span class="line"><span class="comment">//分割线（占全屏）</span></span><br><span class="line">***</span><br></pre></td></tr></table></figure><p>Copy</p><hr><hr><h2 id="5、图片"><a href="#5、图片" class="headerlink" title="5、图片"></a>5、图片</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//图片插入</span></span><br><span class="line">![图片名称](图片地址-可以本地：也可以网络)</span><br></pre></td></tr></table></figure><p>Copy</p><h3 id="5-1本地图片："><a href="#5-1本地图片：" class="headerlink" title="5.1本地图片："></a>5.1本地图片：</h3><p><img src="http://47.104.231.144/blog/images/me4.png" alt="由于本地图片是在网页上是无法直接显示的，看语法就行"></p><h3 id="5-2网络图片："><a href="#5-2网络图片：" class="headerlink" title="5.2网络图片："></a>5.2网络图片：</h3><p>!(<a href="http://47.104.231.144:9999/blog/images/me4.png" target="_blank" rel="noopener">http://47.104.231.144:9999/blog/images/me4.png</a>)</p><hr><h2 id="6、超链接"><a href="#6、超链接" class="headerlink" title="6、超链接"></a>6、超链接</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//超链接</span></span><br><span class="line">[点击跳转到我的GitHub](https:<span class="comment">//github.com/lipliu)</span></span><br></pre></td></tr></table></figure><p>Copy</p><p><a href="www.baidu.com">dd</a></p><p><strong>效果如下：</strong></p><p><a href="https://github.com/yerenping" target="_blank" rel="noopener">点击跳转到我的GitHub</a></p><hr><h2 id="7、列表"><a href="#7、列表" class="headerlink" title="7、列表"></a>7、列表</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//有序列表：序号+点+空格，生成列表 </span></span><br><span class="line"><span class="number">1</span>. 首页</span><br><span class="line"><span class="number">2</span>. 分类</span><br><span class="line"><span class="number">3</span>. 标题</span><br><span class="line"><span class="comment">//无需列表：- + 空格</span></span><br><span class="line">-</span><br></pre></td></tr></table></figure><p>Copy</p><p><strong>有序：</strong></p><ol><li>首页</li><li>分类</li><li>标题</li></ol><p><strong>无序：</strong></p><p>-</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Fri Jul 31 2020 12:23:35 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;​ &lt;strong&gt;查看源代码快捷键:Ctrl+/&lt;/strong&gt;&lt;/p&gt;&lt;h2 id=&quot;1、标题&quot;&gt;&lt;a href=&quot;#1、标题&quot; clas
      
    
    </summary>
    
    
      <category term="hobby" scheme="http://yoursite.com/categories/hobby/"/>
    
    
      <category term="learn" scheme="http://yoursite.com/tags/learn/"/>
    
  </entry>
  
  <entry>
    <title>摄影基础知识</title>
    <link href="http://yoursite.com/2019/12/21/page/"/>
    <id>http://yoursite.com/2019/12/21/page/</id>
    <published>2019-12-21T13:02:01.000Z</published>
    <updated>2019-12-21T13:11:27.770Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Jul 31 2020 12:23:35 GMT+0800 (GMT+08:00) --><p><strong>1.不同焦段对人的影响</strong></p><p>1.24mm,35mm,55mm,90mm,135mm(SONY F1.8GM)</p><p>2.24,35偏广角镜头，四角拉伸都感觉，偏大教堂，景点</p><p>3.85mm最适合拍人像</p><p>4.长焦135mm,人物和想要出现的背景</p><p>5.平常55mm，初学者</p><p><strong>2.什么是快门，光圈和ISO？</strong></p><p>快门：相机右下角数字 1/25 1/60 快门的速度，打开到闭合，定格时间越短，越慢对曝光也有影响，曝光度越高，夜景用三脚架</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Fri Jul 31 2020 12:23:35 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;&lt;strong&gt;1.不同焦段对人的影响&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;1.24mm,35mm,55mm,90mm,135mm(SONY F1.8
      
    
    </summary>
    
    
      <category term="life" scheme="http://yoursite.com/categories/life/"/>
    
    
      <category term="hobby" scheme="http://yoursite.com/tags/hobby/"/>
    
  </entry>
  
</feed>
